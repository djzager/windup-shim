- - message: Currently OpenJFX (open-source implementation of JavaFX) is neither shipped
      nor supported on RHEL.
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-0
    when:
      java.referenced:
        location: IMPORT
        pattern: javafx.{*}
  - message: The font library is different in OpenJDK compared to OracleJDK.. This
      means slightly different text layout in some cases.. Ensure with tests that
      the output is still as expected.
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-1
    when:
      or:
      - java.referenced:
          location: IMPORT
          pattern: (java\.awt|javafx\.scene\.text).Font
      - java.referenced:
          location: METHOD_CALL
          pattern: (java\.awt|javafx\.scene\.text).{*}Font{*}
      - java.referenced:
          location: METHOD_CALL
          pattern: javax.swing.{*}.{*}Font{*}
  - message: OpenJDK does not support the resource management API for Java.
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-2
    when:
      java.referenced:
        pattern: jdk.management.resource.{*}
  - message: OracleJDK used to use KCMS as color mangement system up until JDK7 by
      default. It switched to Little CMS (LCMS) with JDK8.. OpenJDK uses LCMS. If
      you continued to use KCMS by using the property ``sun.java2d.cmm=sun.java2d.cmm.kcms.KcmsServiceProvider``,
      remove this property and ensure in your tests that your application still works
      as expected.
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-3
    when:
      java.referenced:
        pattern: java.awt.Color
  - message: OpenJDK has its own 2D library, different from the proprietary JDK. This
      means that its performance may be different.. Ensure during your tests that
      the application behaves as expected.
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-4
    when:
      java.referenced:
        location: IMPORT
        pattern: java.awt.(geom|color|font|image|image\.renderable|print){*}
  - message: 'When on RHEL, OpenJDK uses the NSS crypto library from RHEL instead
      of the built-in one.. This mostly affects elliptic curve cryptography, where
      OpenJDK supports all of the RHEL curves and none of the others.. A list of all
      cipher suits of NSS in RHEL:. * RHEL6: [https://access.redhat.com/articles/1470663](https://access.redhat.com/articles/1470663).
      * RHEL7: [https://access.redhat.com/articles/1463663](https://access.redhat.com/articles/1463663)'
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-5
    when:
      or:
      - java.referenced:
          location: METHOD_CALL
          pattern: java.security.KeyPairGenerator.getInstance({*}
      - java.referenced:
          location: METHOD_CALL
          pattern: javax.crypto.KeyAgreement.getInstance({*}
      - java.referenced:
          location: CONSTRUCTOR_CALL
          pattern: java.security.spec.EC{*}
      - java.referenced:
          location: IMPORT
          pattern: java.security.spec.EC{*}
      - java.referenced:
          location: INHERITANCE
          pattern: java.security.spec.EC{*}
      - java.referenced:
          location: METHOD_CALL
          pattern: java.security.spec.EC{*}
      - java.referenced:
          location: VARIABLE_DECLARATION
          pattern: java.security.spec.EC{*}
      - java.referenced:
          location: CONSTRUCTOR_CALL
          pattern: java.security.spec.EllipticCurve{*}
      - java.referenced:
          location: IMPORT
          pattern: java.security.spec.EllipticCurve{*}
      - java.referenced:
          location: INHERITANCE
          pattern: java.security.spec.EllipticCurve{*}
      - java.referenced:
          location: METHOD_CALL
          pattern: java.security.spec.EllipticCurve{*}
      - java.referenced:
          location: VARIABLE_DECLARATION
          pattern: java.security.spec.EllipticCurve{*}
