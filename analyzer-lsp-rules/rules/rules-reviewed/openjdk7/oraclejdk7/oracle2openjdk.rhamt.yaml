- rules:
  - message: "\n                        Currently OpenJFX (open-source implementation
      of JavaFX) is neither shipped nor supported on RHEL.\n                    "
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-0
    when:
    - java.referenced:
        location: IMPORT
        pattern: javafx.{*}
  - message: "\n                        The font library is different in OpenJDK compared
      to OracleJDK.\n                        This means slightly different text layout
      in some cases.\n                        Ensure with tests that the output is
      still as expected.\n                    "
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-1
    when:
    - or:
      - java.referenced:
          location: IMPORT
          pattern: '{package}.Font'
      - java.referenced:
          location: METHOD_CALL
          pattern: '{package}.{*}Font{*}'
      - java.referenced:
          location: METHOD_CALL
          pattern: javax.swing.{*}.{*}Font{*}
  - message: "\n                        OpenJDK does not support the resource management
      API for Java.\n                    "
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-2
    when:
    - java.referenced:
        pattern: jdk.management.resource.{*}
  - message: "\n                        OracleJDK used to use KCMS as color mangement
      system up until JDK7 by default. It switched to Little CMS (LCMS) with JDK8.\n
      \                       OpenJDK uses LCMS. If you continued to use KCMS by using
      the property ``sun.java2d.cmm=sun.java2d.cmm.kcms.KcmsServiceProvider``, remove
      this property and ensure in your tests that your application still works as
      expected.\n                    "
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-3
    when:
    - java.referenced:
        pattern: java.awt.Color
  - message: "\n                       OpenJDK has its own 2D library, different from
      the proprietary JDK. This means that its performance may be different.\n                       Ensure
      during your tests that the application behaves as expected.\n                    "
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-4
    when:
    - java.referenced:
        location: IMPORT
        pattern: java.awt.{package}{*}
  - message: "\n                    When on RHEL, OpenJDK uses the NSS crypto library
      from RHEL instead of the built-in one.\n\n                    This mostly affects
      elliptic curve cryptography, where OpenJDK supports all of the RHEL curves and
      none of the others.\n                    \n                    A list of all
      cipher suits of NSS in RHEL:\n\n                    * RHEL6: [https://access.redhat.com/articles/1470663](https://access.redhat.com/articles/1470663)\n
      \                   * RHEL7: [https://access.redhat.com/articles/1463663](https://access.redhat.com/articles/1463663)\n
      \                   "
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/openjdk7/oraclejdk7/oracle2openjdk.rhamt.xml-5
    when:
    - or:
      - java.referenced:
          location: METHOD_CALL
          pattern: java.security.KeyPairGenerator.getInstance({*}
      - java.referenced:
          location: METHOD_CALL
          pattern: javax.crypto.KeyAgreement.getInstance({*}
      - java.referenced:
          location: CONSTRUCTOR_CALL
          pattern: java.security.spec.EC{*}
      - java.referenced:
          location: IMPORT
          pattern: java.security.spec.EC{*}
      - java.referenced:
          location: INHERITANCE
          pattern: java.security.spec.EC{*}
      - java.referenced:
          location: METHOD_CALL
          pattern: java.security.spec.EC{*}
      - java.referenced:
          location: VARIABLE_DECLARATION
          pattern: java.security.spec.EC{*}
      - java.referenced:
          location: CONSTRUCTOR_CALL
          pattern: java.security.spec.EllipticCurve{*}
      - java.referenced:
          location: IMPORT
          pattern: java.security.spec.EllipticCurve{*}
      - java.referenced:
          location: INHERITANCE
          pattern: java.security.spec.EllipticCurve{*}
      - java.referenced:
          location: METHOD_CALL
          pattern: java.security.spec.EllipticCurve{*}
      - java.referenced:
          location: VARIABLE_DECLARATION
          pattern: java.security.spec.EllipticCurve{*}
