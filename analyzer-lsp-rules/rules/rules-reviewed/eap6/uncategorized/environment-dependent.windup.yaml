- - message: The class is dynamically loaded within application. During the migration,
      multiple classes that are provided on classpath by a different server may not
      be present anymore.. Please review the class-loading mechanisms and ensure that
      the dynamically loaded class is available in JBoss EAP.
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/eap6/uncategorized/environment-dependent.windup.xml-0
    when:
      java.referenced:
        location: METHOD_CALL
        pattern: java.lang.Class.forName(*
  - message: This method lookups an object using a JNDI String. During the migration
      process, some entity JNDI bindings may change.. Ensure that the JNDI Name does
      not need to change for JBoss EAP.. *For Example:*. ```java. (ConnectionFactory)initialContext.lookup("weblogic.jms.ConnectionFactory");.
      ```. *should become:*. ```java. (ConnectionFactory)initialContext.lookup("/ConnectionFactory");.
      ```
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/eap6/uncategorized/environment-dependent.windup.xml-1
    when:
      as: default
      ignore: true
      java.referenced:
        location: METHOD_CALL
        pattern: javax.naming.Context.lookup*
  - message: In JBoss EAP, the `InitialContext` should be instantiated with no arguments.
      Once an instance is constructed, look up the service using portable JNDI lookup
      syntax. Ensure also that in case system properties for `InitialContext` are
      provided, they do not need to be changed for the JBoss EAP.. ```java. InitialContext
      context = new InitialContext();. Service service = (Service) context.lookup(
      "java:app/service/" + ServiceImpl.class.getSimpleName() );. ```
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/eap6/uncategorized/environment-dependent.windup.xml-2
    when:
      as: default
      ignore: true
      java.referenced:
        location: CONSTRUCTOR_CALL
        pattern: javax.naming.InitialContext(java.util.Hashtable*
  - ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/eap6/uncategorized/environment-dependent.windup.xml-3
    tag:
    - webservice
    when:
      as: default
      file: jndi.properties
      ignore: true
  - message: After migration, some of the JMX beans provided by the previous server
      may not be present anymore.. Ensure that the `javax.management.{suffix}` does
      not need to change for JBoss EAP.
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/eap6/uncategorized/environment-dependent.windup.xml-4
    when:
      as: default
      ignore: true
      java.referenced:
        location: CONSTRUCTOR_CALL
        pattern: javax.management.(ObjectName)*
  - message: After migration, some of the JMX beans provided by the previous server
      may not be present anymore.. Ensure that the `javax.management.{suffix}` does
      not need to change for JBoss EAP.
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/eap6/uncategorized/environment-dependent.windup.xml-5
    when:
      as: default
      ignore: true
      java.referenced:
        location: CONSTRUCTOR_CALL
        pattern: javax.management.(remote.JMXServiceURL)*
  - message: After migration, JMX connection String or parameters may be different
      than the one provided by previous server.. As an example, `javax.management.remote.JMXConnectorFactory.PROTOCOL_PROVIDER_PACKAGES`
      will change.. Ensure that any of the parameters does not need to change for
      JBoss EAP.
    ruleID: http://github.com/windup/windup-rulesets/tree/master/rules/rules-reviewed/eap6/uncategorized/environment-dependent.windup.xml-6
    when:
      as: default
      ignore: true
      java.referenced:
        location: METHOD_CALL
        pattern: javax.management.remote.JMXConnectorFactory.connect(*)
